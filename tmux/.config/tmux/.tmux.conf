
## Set true colors
set -g default-terminal "screen-256color" #Important for display images in tmux
#set-option -ga terminal-overrides ",*256col*:Tc"

## needed by yazi and imgcat in tmux
set-option -g allow-passthrough on
#set -ga update-environment TERM
#set -ga update-environment TERM_PROGRAM

## Bind keys ` and C-a
unbind C-b
set -g prefix `
bind ` send-prefix
set -g prefix2 C-a
bind C-a send-prefix -2

## Reload configuration
bind r source-file ~/.config/tmux/.tmux.conf \; display '~/.config/tmux/.tmux.conf sourced'

## Display
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename off   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

bind q display-panes
bind-key a set-window-option synchronize-panes #synchronize-panes

## Clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

## Navigation

# create session
bind C-c new-session
# create windows
bind c  new-window -c "#{pane_current_path}"

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
#bind BTab switch-client -l  # move to last session

#split window#
unbind '"'
bind - splitw -v -c "#{pane_current_path}" #vertical split (prefix -)
unbind %
bind | splitw -h -c "#{pane_current_path}" #horizontal split (prefix |)

# pane navigation
bind -r k select-pane -U  # move up
bind -r j select-pane -D  # move down
bind -r h select-pane -L  # move left
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind ^d swap-pane -D
bind ^u swap-pane -U

# maximize current pane
bind + run 'cut -c3- ~/.config/tmux/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r ^k resize-pane -U 10 # upward (prefix Ctrl+k)
bind -r ^j resize-pane -D 10 # downward (prefix Ctrl+j)
bind -r ^h resize-pane -L 10 # to the left (prefix Ctrl+h)
bind -r ^l resize-pane -R 10 # to the right (prefix Ctrl+l)

# window navigation
unbind n
unbind p
bind -r p previous-window # select previous window
bind -r n next-window     # select next window
bind Tab last-window        # move to last active window
# kill window
bind ^q kill-window #(prefix ^q)

# toggle mouse
bind m run "cut -c3- ~/.config/tmux/.tmux.conf | sh -s _toggle_mouse"

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
set-window-option -g mode-keys vi #vi mode

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

#run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy through yank
if -b 'command -v yank > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | yank"'
## copy to X11 clipboard
#if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null
#â†ª2>&1"'
## copy to macOS clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
## copy to Windows clipboard
#if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
#if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# transfer copied text to attached terminal with yank
#bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'
#
## transfer most-recently copied text to attached terminal with yank
#bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'
#
## transfer previously copied text (chosen from a menu) to attached terminal
#bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'


## Buffers -------------------------------------------------------------------
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

##Plugin @tpm
#set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.config/tmux/plugins/'
#set -g @plugin 'tmux-plugins/tpm'
#
#set -g @plugin 'jimeh/tmux-themepack' # to configure tmux theme
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#
##configure
#set -g @themepack 'powerline/default/cyan' # use this theme for tmux
## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.config/tmux/plugins/tpm/tpm'

##Plugin manual
#'jimeh/tmux-themepack' # to configure tmux theme
source-file ${XDG_CONFIG_HOME}/tmux/plugins/tmux-themepack/powerline/block/cyan.tmuxtheme
#'tmux-plugins/tmux-resurrect'
run-shell ${XDG_CONFIG_HOME}/tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ${XDG_CONFIG_HOME}/tmux/plugins/tmux-continuum/continuum.tmux
